---

# parameters specifications for EasyGUI

analyze_group:
  metas:
    box_type: 'boolbox'
    set_value_on_self: ['analyze_group']
  attrs:
    msg: 'Run individual or group tail analysis?'
    title: 'Analysis Type'
    choices:
      - '[G]roup'
      - '[I]ndividual'
    default_choice: null
    # cancel_choice: '[I]ndividual'

full_dbdf:
  metas:
    box_type: 'fileopenbox'  # TODO: add try-except for file-opening to handle wrong filetype
    set_value_on_self: ['full_dbdf', '_read_fname_to_df(opt_val)']
  attrs:
    msg: 'What is the name of the database?'
    title: 'DB name'
    filetypes:
      - '*.csv'
      - '*.txt'
      - '*.xls'
      - '*.xlsx'

tickers:
  metas:
    box_type: 'multchoicebox'
    creation_criteria: ['choices set_to: self.full_dbdf.columns']
  attrs:
    msg: 'Select the tickers to analyze'
    title: 'Tickers selection'
    choices: []
    preselect: null

date_bounds:
  metas:
    box_type: 'multenterbox'
    creation_criteria: ['values set_to: self.full_dbdf.index[[len(self.full_dbdf)//2, -1]]']
    # trans_func: ''
    #   - 'date_i'
    #   - 'date_f'
  attrs:
    msg: 'Please specify the initial date, the final date and the lookback for rolling analysis?'
    title: 'Dates input'
    fields:
      - 'initial date'
      - 'final date'
    values: []

approach:
  metas:
    box_type: 'choicebox'
    set_value_on_self: ['use_dynamic', "opt_val != 'static'"]
  attrs:
    msg: 'Please specify which approach you would like to use'
    title: 'Approach'
    choices:
      - 'rolling'
      - 'increasing'
      - 'static'
    preselect: 0

dynamic_parameters:
  metas:
    box_type: 'multenterbox'
    creation_criteria:
      - 'init_on: use_dynamic'
      - 'values set_by: analyze_group'
  attrs:
    msg: "What is the frequency at which the tail should be analyzed (days)?"
    title: 'lookback & frequency'
    fields:
      - 'lookback'
      - 'frequency'
    values:  # multenterbox's equivalent of default value(s)
      -  # values for Individual mode
        - 504
        - 1
      -  # values for Group mode
        - 252
        - 1

partition:
  metas:
    box_type: 'choicebox'
    creation_criteria: ['init_on: analyze_group']
  attrs:
    msg: 'How do you want to group the inputs?'
    title: 'Partition type'
    choices:
      - 'Country'
      - 'Maturity'
      - 'Core vs. Periphery'
      - 'All'
      - 'None'
    preselect: 0

returns_type:
  metas:
    box_type: 'choicebox'
  attrs:
    msg: 'Please specify which type of series you want to study'
    title: 'Input type'
    choices:
      - 'raw'  # TODO: change name to 'basic' or 'returns'
      - 'relative'
      - 'log'
    preselect: 2

tau:
  metas:
    box_type: 'integerbox'
  attrs:
    msg: 'Please specify the time lag of the input series: 1 = daily, 5 = weekly, 22 = monthly'
    title: 'delta'
    default: 1
    lowerbound: 1
    upperbound: 1_000_000

normalize:
  metas:
    box_type: 'multchoicebox'
    set_value_on_self: ['normalize', 'bool(opt_val)']
    # trans_func: ''
  attrs:
    msg: 'Standardize and/or take Absolute value of data'
    title: 'Normalization'
    choices:
      - 'standardize (normally)'
      - 'absolute value'
    preselect: null

norm_target:
  metas:
    box_type: 'boolbox'
    creation_criteria: ['init_on: self.normalize and not self.analyze_group and not self.use_dynamic']
  attrs:
    msg: 'What target to normalize?'
    title: 'normalization target'
    choices:
      - '[s]eries'
      - '[t]ail'
    default_choice: '[s]eries'

norm_timings:
  metas:
    box_type: 'multchoicebox'
    creation_criteria: ['init_on: self.normalize and self.analyze_group']
  attrs:
    msg: 'Normalize before and/or after grouping the data'
    title: 'normalization timing'
    choices:
      - 'before'
      - 'after'
    preselect: 1

anal_tails:
  metas:
    box_type: 'multchoicebox'
  attrs:
    msg: 'Please specify which tail you want to plot in the alpha timeline'
    title: 'Select one or both tails'
    choices:
      - 'right'
      - 'left'
    preselect:
      - 0
      - 1

alpha_signif:
  metas:
    box_type: 'enterbox'
  attrs:
    msg: 'Please specify the significance of the confidence interval (1 - a) for the alpha parameter '
    title: 'alpha'
    default: 0.05

data_is_continuous:
  metas:
    box_type: 'boolbox'
  attrs:
    msg: 'What is the nature of your data?'
    title: 'Data type'
    choices:
      - '[c]ontinuous'
      - '[d]iscrete'
    default_choice: '[c]ontinuous'
    # cancel_choice: 'continuous'

xmin_rule:
  metas:
    box_type: 'choicebox'
    creation_criteria: ['choices set_by: analyze_group']
    set_value_on_self: ['xmin_rule']
    # trans_func: ''
  attrs:
    msg: 'What is the criteria for picking xmin'
    title: 'xmin rule'
    choices:
      -  # choices for Individual mode
        - 'clauset'
        - 'manual'
        - 'percentile'
        - 'file'
      -  # choices for Group mode
        - 'average'
        - 'clauset'
        - 'manual'
        - 'percentile'
        - 'file'
    # preselect: null

xmin_qnty:
  metas:
    box_type: 'enterbox'
    creation_criteria:
      - "init_on: self.xmin_rule in {'manual', 'percentile'}"
      - "default set_by: self.xmin_rule == 'manual'"
  attrs:
    msg: 'enter numeric argument for chosen xmin rule (manual /percentile)'
    title: 'xmin quantity'
    default:
      - '90%'   # default value for rule 'percentile'
      - '0.0'   # default value for rule 'manual'

xmin_average:
  metas:
    box_type: 'multenterbox'
    creation_criteria: ["init_on: self.xmin_rule == 'average'"]
  attrs:
    msg: "enter the parameters for calculating the rolling average"
    title: 'rolling average xmin'
    fields:
      - 'rolling window size'
      - 'rolling window lag'
    values:
      - 66
      - 0

use_file_for_avg:
  metas:
    box_type: 'ynbox'
    creation_criteria: ["init_on: self.xmin_rule == 'average'"]
    set_value_on_self: ['use_file_for_avg']
  attrs:
    msg: "get averaged xmins from data file?"
    title: 'use file for average'
    default_choice: null

xmin_file:
  metas:
    box_type: 'fileopenbox'
    creation_criteria: ["init_on: self.xmin_rule == 'file' or getattr(self, 'use_file_for_avg', None)"]
    set_value_on_self: ['xmins_df', '_read_fname_to_df(opt_val)']
  attrs:
    msg: 'select file containing xmins data to use'
    title: 'xmins data file'
    filetypes:
      - '*.csv'
      - '*.txt'
      - '*.xls'
      - '*.xlsx'

run_ks_test:
  metas:
    box_type: 'boolbox'
    creation_criteria: ['default_choice set_by: analyze_group']
    set_value_on_self: ['run_ks_test']
  attrs:
    msg: 'Run or Skip KS-test for p-values'
    title: 'KS-Test'
    choices:
      - '[r]un'
      - '[s]kip'
    default_choice:
      - '[r]un'   # default for Individual mode 
      - '[s]kip'  # default for Group mode

ks_iter:
  metas:
    box_type: 'integerbox'
    creation_criteria:
      - 'init_on: run_ks_test'
      - 'default set_by: analyze_group'
  attrs:
    msg: 'What is the number of iterations for the Clauset p-value algorithm?'
    title: 'iterations'
    default:
      - 100   # default for Individual mode
      - 2     # default for Group mode
    lowerbound: 0
    upperbound: 1_000_000

compare_distros:
  metas:
    box_type: 'boolbox'
    creation_criteria: ['default_choice set_by: analyze_group']
  attrs:
    msg: 'Compare fitted power law to other distribution types?'
    title: 'Compare distributions'
    choices:
      - '[Y]es'
      - '[N]o'
    default_choice:
      - '[Y]es' # default for Individual mode 
      - '[N]o'  # default for Group mode

nproc:
  metas:
    box_type: 'integerbox'
    creation_criteria: ['default set_by: evaluation']
  attrs:
    msg: '# of concurrent processes to run for analysis'
    title: '# procs'
    default: 'os.cpu_count()'
    lowerbound: 1
    upperbound: 1024

plot_results:
  metas:
    box_type: 'boolbox'
    # creation_criteria:
    #   - 'default_by_mode'
  attrs:
    msg: 'Plot the analyzed data?'
    title: 'Plot'
    choices:
      - '[Y]es'
      - '[N]o'
    default_choice: '[N]o'

# show_plots:
#   msg: ''
#   title: ''
#
# save_plots:
#   msg: ''
#   title: ''

# question      = "Do you want to save the sequential scaling plot?"
#         choices      = ['Yes', 'No']
#         plot_storing = eg.choicebox(question, 'Plot', choices)
#
#         if plot_storing == 'Yes':
#             question    = "What is the target directory for the pictures?";
#             motherpath  = eg.enterbox(question, title="path", default='C:\Users\\alber\Dropbox\Research\IP\Econophysics\Final Code Hurst Exponent\\');
