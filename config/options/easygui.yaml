---

# parameters specifications for EasyGUI

analyze_group:
  metas:
    box_type: 'boolbox'
    set_bool_flag:
      - 'analyze_group'
      - 'opt_val is True'
  attrs:
    msg: 'Run individual or group tail analysis?'
    title: 'Analysis Type'
    choices:
      - '[G]roup'
      - '[I]ndividual'
    default_choice: '[I]ndividual'
    # cancel_choice: '[I]ndividual'

full_dbdf:
  metas:
    box_type: 'fileopenbox'
    # cb_val: ''
  attrs:
    msg: 'What is the name of the database?'
    title: 'DB name'
    filetypes:
      - '*.csv'
      - '*.txt'
      - '*.xls'
      - '*.xlsx'

# msg       = "How many entries would you like to analyze?"
# no_entries       = int(eg.enterbox(msg, title="No. entries", default="4"))
# fieldNames       = ["# " + str(i) for i in xrange(1, no_entries + 1, 1)]
# fieldValues   = ['DE 01Y', 'DE 03Y', 'DE 05Y', 'DE 10Y',]
# title           = "Tickers input"
# labels        = eg.multenterbox(msg, title, fieldNames, fieldValues)

# tickers:
#   box_type: 'multchoicebox'
#   msg: 'Select the tickers to analyze'
#   title: 'Tickers selection'
#   choices:
#     - ''
#     - ''

date_bounds:
  metas:
    box_type: 'multenterbox'
    # trans_func: ''
    #   - 'date_i'
    #   - 'date_f'
  attrs:
    msg: 'Please specify the initial date, the final date and the lookback for rolling analysis?'
    title: 'Dates input'
    fields:
      - 'initial date'
      - 'final date'

# date_i:
#   msg: ''
#   title: ''
#
# date_f:
#   msg: ''
#   title: ''

# approach_args:
approach:
  metas:
    box_type: 'choicebox'
    set_bool_flag:
      - 'use_dynamic'
      - "opt_val != 'static'"
  attrs:
    msg: 'Please specify which approach you would like to use'
    title: 'Approach'
    choices:
      - 'rolling'
      - 'increasing'
      - 'static'
    preselect: 0

dynamic_parameters:
  metas:
    box_type: 'multenterbox'
    creation_flags:
      - 'init_on: use_dynamic'
      - 'values-set_by: analyze_group'
  attrs:
    msg: "What is the frequency at which the tail should be analyzed (days)?"
    title: 'lookback & frequency'
    fields:
      - 'lookback'
      - 'frequency'
    values:  # multenterbox's equivalent of default value(s)
      -  # values for Individual mode
        - 504
        - 1
      -  # values for Group mode
        - 252
        - 1

partition:
  metas:
    box_type: 'choicebox'
    creation_flags:
      - 'init_on: analyze_group'
  attrs:
    msg: 'How do you want to group the inputs?'
    title: 'Partition type'
    choices:
      - 'Country'
      - 'Maturity'
      - 'Core vs. Periphery'
      - 'All'
      - 'None'
    preselect: 0

returns_type:
  metas:
    box_type: 'choicebox'
  attrs:
    msg: 'Please specify which type of series you want to study'
    title: 'Input type'
    choices:
      - 'raw'  # TODO: change name to 'basic' or 'returns'
      - 'relative'
      - 'log'
    preselect: 3

tau:
  metas:
    box_type: 'integerbox'
  attrs:
    msg: 'Please specify the time lag of the input series: 1 = daily, 5 = weekly, 22 = monthly'
    title: 'delta'
    default: 1
    lowerbound: 1
    upperbound: 1_000_000

normalize:
  metas:
    box_type: 'multchoicebox'
    set_bool_flag:
      - 'normalize'
      - 'bool(opt_val)'
    # trans_func: ''
  attrs:
    msg: 'Standardize and/or take Absolute value of data'
    title: 'Normalization'
    choices:
      - 'standardize (normally)'
      - 'absolute value'
    # preselect:
    #   - 0
    #   - 1

norm_target:
  metas:
    box_type: 'boolbox'
    creation_flags:
      - 'init_on: self.normalize and not self.analyze_group and not self.use_dynamic'
  attrs:
    msg: 'What target to normalize?'
    title: 'normalization target'
    choices:
      - '[s]eries'
      - '[t]ail'
    default_choice: '[s]eries'

norm_timings:
  metas:
    box_type: 'multchoicebox'
    creation_flags:
      - 'init_on: self.normalize and self.analyze_group'
    # trans_func: ''
  attrs:
    msg: 'Normalize before and/or after grouping the data'
    title: 'normalization timing'
    choices:
      - 'before'
      - 'after'
    preselect: 1

anal_tails:
  metas:
    box_type: 'multchoicebox'
    # trans_func: ''
  attrs:
    msg: 'Please specify which tail you want to plot in the alpha timeline'
    title: 'Select one or both tails'
    choices:
      - 'right'
      - 'left'
    preselect:
      - 0
      - 1

alpha_signif:
  metas:
    box_type: 'enterbox'
    # callafter: 'float'
  attrs:
    msg: 'Please specify the significance of the confidence interval (1 - a) for the alpha parameter '
    title: 'alpha'
    default: 0.05

data_is_continuous:
  metas:
    box_type: 'boolbox'
  attrs:
    msg: 'What is the nature of your data?'
    title: 'Data type'
    choices:
      - '[c]ontinuous'
      - '[d]iscrete'
    default_choice: '[c]ontinuous'
    # cancel_choice: 'continuous'

xmin_rule:
  metas:
    box_type: 'choicebox'
    creation_flags:
      - 'choices-set_by: analyze_group'
    # trans_func: ''
  attrs:
    msg: 'What is the criteria for picking xmin'
    title: 'xmin rule'
    choices:
      -  # choices for Individual mode
        - 'clauset'
        - 'manual'
        - 'percentile'
        - 'file'
      -  # choices for Group mode
        - 'average'
        - 'clauset'
        - 'manual'
        - 'percentile'
        - 'file'

# if xmin_rule == 'Manual':
#         msg   = "What is the value for xmin?"
#         xmin_value = float(eg.enterbox(msg, title="xmin value", default="0.0"))
# if xmin_rule == 'Percentile':
#         msg   = "What is the value of the significance for xmin?"
#         xmin_sign  = float(eg.enterbox(msg, title="xmin percentile", default="90"))
#
# if xmin_rule == 'Rolling':  # i.e. Average
#         msg     = "How many days do you want to include in the moving xmin average?"
#         rolling_days = int(eg.enterbox(msg, title="rolling days", default="66"))
#         msg     = "How many lags do you want in your average?"
#         rolling_lags = int(eg.enterbox(msg, title="rolling days", default="0"))

run_ks_test:
  metas:
    box_type: 'boolbox'
    creation_flags:
      - 'default_choice-set_by: analyze_group'
    set_bool_flag:
      - 'run_ks'
      - 'opt_val is True'
  attrs:
    msg: 'Run or Skip KS-test for p-values'
    title: 'KS-Test'
    choices:
      - '[R]un'
      - '[S]kip'
    default_choice:
      - '[R]un'   # default for Individual mode 
      - '[S]kip'  # default for Group mode

ks_iter:
  metas:
    box_type: 'integerbox'
    creation_flags:
      - 'init_on: run_ks'
      - 'default-set_by: analyze_group'
  attrs:
    msg: 'What is the number of iterations for the Clauset p-value algorithm?'
    title: 'iterations'
    default:
      - 100   # default for Individual mode
      - 2     # default for Group mode
    lowerbound: 0
    upperbound: 1_000_000

compare_distros:
  metas:
    box_type: 'boolbox'
    creation_flags:
      - 'default_choice-set_by: analyze_group'
  attrs:
    msg: 'Compare fitted power law to other distribution types?'
    title: 'Compare distributions'
    choices:
      - '[Y]es'
      - '[N]o'
    default_choice:
      - '[Y]es' # default for Individual mode 
      - '[N]o'  # default for Group mode

nproc:
  metas:
    box_type: 'integerbox'
    creation_flags:
      - 'default-set_by: evaluation'
  attrs:
    msg: '# of concurrent processes to run for analysis'
    title: '# procs'
    default: 'os.cpu_count()'
    lowerbound: 1
    upperbound: 1024

plot_results:
  metas:
    box_type: 'boolbox'
    # creation_flags:
    #   - 'default_by_mode'
  attrs:
    msg: 'Plot the analyzed data?'
    title: 'Plot'
    choices:
      - '[Y]es'
      - '[N]o'
    default_choice: '[N]o'

# show_plots:
#   msg: ''
#   title: ''
#
# save_plots:
#   msg: ''
#   title: ''

# question      = "Do you want to save the sequential scaling plot?"
#         choices      = ['Yes', 'No']
#         plot_storing = eg.choicebox(question, 'Plot', choices)
#
#         if plot_storing == 'Yes':
#             question    = "What is the target directory for the pictures?";
#             motherpath  = eg.enterbox(question, title="path", default='C:\Users\\alber\Dropbox\Research\IP\Econophysics\Final Code Hurst Exponent\\');
